# Generated by Django 5.0.4 on 2024-10-13 23:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('price', models.IntegerField(null=True)),
                ('description', models.CharField(max_length=300, null=True)),
                ('views', models.IntegerField(null=True)),
                ('category', models.IntegerField(choices=[(0, 'Shirt'), (1, 'Jacket'), (2, 'Pants'), (3, 'Hoodie')])),
                ('weights_file_path', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product_SKU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=13, null=True)),
                ('is_seller', models.BooleanField(default=False, null=True)),
                ('weights_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(max_length=300, null=True)),
                ('city', models.IntegerField(choices=[(0, 'Alexanderia'), (1, 'Cairo')])),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Copouns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.PositiveIntegerField(default=0, null=True)),
                ('useCount', models.PositiveIntegerField(default=0, null=True)),
                ('copounTEXT', models.CharField(max_length=20, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfOrder', models.DateField(auto_now_add=True)),
                ('dateOfDelivery', models.DateField()),
                ('total', models.IntegerField(null=True)),
                ('address', models.CharField(max_length=300, null=True)),
                ('is_delevered', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.customers')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(null=True)),
                ('ordeID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.orders')),
                ('productID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.customers')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.product')),
            ],
        ),
        migrations.CreateModel(
            name='SellerPref',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_sales', models.PositiveIntegerField(default=0, null=True)),
                ('views', models.PositiveIntegerField(default=0, null=True)),
                ('Earnings', models.PositiveIntegerField(default=0, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Sells',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordeID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.orders')),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.sellerpref')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainproject.customers')),
            ],
        ),
    ]
